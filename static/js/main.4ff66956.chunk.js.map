{"version":3,"sources":["images/bg-desktop-light.jpg","components/Header.js","components/TaskInput.js","components/Task.js","components/TaskFilter.js","components/TasksList.js","components/useFetch.js","components/Home.js","App.js","index.js"],"names":["Header","useState","lightMode","setLightMode","useEffect","r","document","querySelector","style","bkLight","className","onClick","TaskInput","RefreshList","content","setContent","onSubmit","e","preventDefault","task","fetch","method","headers","body","JSON","stringify","then","type","placeholder","value","onChange","target","Task","id","handleChecked","checked","toggleChecked","firstRender","useRef","checkboxRef","taskRef","current","classList","toggle","draggable","ref","TaskFilter","taskNo","completedTasks","activeTasks","updateList","querySelectorAll","handleSelection","remove","add","handleClear","a","i","length","nodrag","forEach","display","TasksList","tasks","setTaskNo","handleUpdateTasks","dragged","onDragStart","event","opacity","onDragEnd","onDragOver","hasAttribute","borderTop","onDragLeave","border","onDrop","replaced","draggedPos","getBoundingClientRect","replacedPos","y","insertAdjacentElement","Drop","map","useFetch","url","listRefresh","loading","setLoading","data","setData","error","setError","setTimeout","res","ok","Error","json","catch","err","message","Home","setListRefresh","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"4KAAe,MAA0B,6C,OCgD1BA,EA5CA,WACb,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAkBA,OAjBAC,qBAAU,WACR,IAAIC,EAAIC,SAASC,cAAc,SAE7BF,EAAEG,MADAN,EACF,+GAE2BO,EAF3B,uQAUU,KAEX,CAACP,IAGF,yBAAQQ,UAAU,qFAAlB,UACE,oBAAIA,UAAU,6CAAd,kBACA,sBAAKA,UAAU,0BAAf,UACGR,GACC,mBACEQ,UAAU,2BACVC,QAAS,WACPR,GAAa,OAIjBD,GACA,mBACEQ,UAAU,sCACVC,QAAS,WACPR,GAAa,aCDZS,EApCG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACnB,EAA8BZ,mBAAS,IAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KAkBA,OACE,sBAAKL,UAAU,6CAAf,UACE,qBAAKA,UAAU,0BACf,sBAAMM,SApBW,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAO,CAAEL,WAEfM,MACE,sEACA,CACEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KAEvBO,MAAK,WACLb,IACAE,EAAW,QAOX,SACE,uBACEL,UAAU,yBACViB,KAAK,OACLC,YAAY,sBACZC,MAAOf,EACP,aAAW,iBACXgB,SAAU,SAACb,GAAD,OAAOF,EAAWE,EAAEc,OAAOF,gBCehCG,EA5CF,SAAC,GAAiD,IAA/ClB,EAA8C,EAA9CA,QAASmB,EAAqC,EAArCA,GAAIpB,EAAiC,EAAjCA,YAAaqB,EAAoB,EAApBA,cACxC,EAAiCjC,oBAAS,GAA1C,mBAAOkC,EAAP,KAAgBC,EAAhB,KACMC,EAAcC,kBAAO,GACzBC,EAAcD,mBACdE,EAAUF,mBAYZ,OAVAlC,qBAAU,WACJiC,EAAYI,QACdJ,EAAYI,SAAU,GAEtBF,EAAYE,QAAQC,UAAUC,OAAO,WACrCH,EAAQC,QAAQC,UAAUC,OAAO,WACjCT,OAGD,CAACC,IAEF,sBACES,UAAU,OACVC,IAAKL,EACL9B,UAAU,+BACVuB,GAAIA,EAJN,UAOE,qBACEY,IAAKN,EACL7B,UAAU,yBACVC,QAAS,kBAAMyB,GAAeD,IAHhC,SAKGA,GAAW,mBAAGzB,UAAU,8BAE3B,+BAAOI,IACP,mBACEJ,UAAU,oBACVC,QAAS,WACPS,MAAM,+BAAiCa,EAAI,CAAEZ,OAAQ,WAAYK,MAC/D,kBAAMb,YAdPoB,I,uBC0EIa,EAhGI,SAAC,GAA6B,IAA3BjC,EAA0B,EAA1BA,YAAakC,EAAa,EAAbA,OAC3BC,EAAiBV,iBAAO,IACxBW,EAAcX,iBAAO,IAErBY,EAAa,WACjBF,EAAeP,QAAUnC,SAAS6C,iBAAiB,iBACnDF,EAAYR,QAAUnC,SAAS6C,iBAAiB,wBAGlD/C,qBAAU,WACR8C,OAGF,IAAME,EAAkB,SAACnC,GACFX,SAASC,cAAc,aAC7BmC,UAAUW,OAAO,YAChCpC,EAAEc,OAAOW,UAAUY,IAAI,aAqBnBC,EAAW,uCAAG,4BAAAC,EAAA,sDAClBN,IAESO,EAAI,EAHK,YAGFA,EAAIT,EAAeP,QAAQiB,QAHzB,gCAKVtC,MACJ,uEACE4B,EAAeP,QAAQgB,GAAGxB,GAC5B,CACEZ,OAAQ,WATI,OAGiCoC,IAHjC,sBAalB5C,IAbkB,2CAAH,qDAgBjB,OACE,sBACE8C,OAAO,OACPjD,UAAU,6EAFZ,UAIE,iCAAOqC,EAAP,iBACA,wBACEY,OAAO,OACPjD,UAAU,2BACVC,QAAS,SAACM,GACRmC,EAAgBnC,GA3CtBiC,IACe5C,SAAS6C,iBAAiB,SAChCS,SAAQ,SAACzC,GAAD,OAAWA,EAAKX,MAAMqD,QAAU,YAqC/C,iBAUA,wBACEF,OAAO,OACPjD,UAAU,cACVC,QAAS,SAACM,GACRmC,EAAgBnC,GA/CtBiC,IACAF,EAAeP,QAAQmB,SAAQ,SAACzC,GAAD,OAAWA,EAAKX,MAAMqD,QAAU,UAC/DZ,EAAYR,QAAQmB,SAAQ,SAACzC,GAAD,OAAWA,EAAKX,MAAMqD,QAAU,YAyC1D,oBAUA,wBACEF,OAAO,OACPjD,UAAU,wBACVC,QAAS,SAACM,GACRmC,EAAgBnC,GAnDtBiC,IACAD,EAAYR,QAAQmB,SAAQ,SAACzC,GAAD,OAAWA,EAAKX,MAAMqD,QAAU,UAC5Db,EAAeP,QAAQmB,SAAQ,SAACzC,GAAD,OAAWA,EAAKX,MAAMqD,QAAU,YA6C7D,uBAUA,wBAAQF,OAAO,OAAOjD,UAAU,iBAAiBC,QAAS4C,EAA1D,iCCZSO,EA3EG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOlD,EAAkB,EAAlBA,YAC1B,EAA4BZ,mBAC1BK,SAAS6C,iBAAiB,uBAAuBO,QADnD,mBAAOX,EAAP,KAAeiB,EAAf,KAGMC,EAAoB,WACxBD,EAAU1D,SAAS6C,iBAAiB,uBAAuBO,SAE7DtD,oBAAU6D,EAAmB,CAACpD,IAO9B,IAAMqD,EAAU5B,mBA+BhB,OACE,0BACE5B,UAAU,oHACVyD,YAAa,SAAClD,GAAD,OAjCHmD,EAiCenD,EAhC3BiD,EAAQzB,QAAU2B,EAAMrC,YACxBqC,EAAMrC,OAAOvB,MAAM6D,QAAU,OAFlB,IAACD,GAkCVE,UAAW,SAACrD,GAAcA,EA7BtBc,OAAOvB,MAAM6D,QAAU,IA8B3BE,WAAY,SAACtD,GA5BA,IAACmD,EA6BPnD,EAAEc,OAAOyC,aAAa,aA7BfJ,EA6BmCnD,GA5B7CC,iBACAkD,EAAMrC,SAAWmC,EAAQzB,UAC7B2B,EAAMrC,OAAOvB,MAAMiE,UAAY,6BA4B/BC,YAAa,SAACzD,GAAgBA,EAxB1Bc,OAAOvB,MAAMmE,OAAS,IAyB1BC,OAAQ,SAAC3D,GACFA,EAAEc,OAAOyC,aAAa,WAxBpB,SAACJ,GACZA,EAAMlD,iBACNkD,EAAMrC,OAAOvB,MAAMmE,OAAS,GAC5B,IAAIE,EAAWT,EAAMrC,OACjB+C,EAAaZ,EAAQzB,QAAQsC,wBAC/BC,EAAcH,EAASE,wBAErBD,EAAWG,EAAID,EAAYC,EAC7BJ,EAASK,sBAAsB,WAAYhB,EAAQzB,SAEnDoC,EAASK,sBAAsB,cAAehB,EAAQzB,SAcd0C,CAAKlE,IAT/C,UAYG8C,EAAMqB,KAAI,SAACjE,GACV,OACE,cAAC,EAAD,CACEL,QAASK,EAAKL,QAEdmB,GAAId,EAAKc,GACTpB,YAAaA,EACbqB,cAAe+B,GAHV9C,EAAKc,OAOhB,cAAC,EAAD,CAAYpB,YAAaA,EAAakC,OAAQA,IAC9C,oBAAIrC,UAAU,wBAAd,gDC1CS2E,EA9BE,SAACC,EAAKC,GACrB,MAA8BtF,oBAAS,GAAvC,mBAAOuF,EAAP,KAAgBC,EAAhB,KACA,EAAwBxF,mBAAS,MAAjC,mBAAOyF,EAAP,KAAaC,EAAb,KACA,EAA0B1F,mBAAS,MAAnC,mBAAO2F,EAAP,KAAcC,EAAd,KAwBA,OAtBAzF,qBAAU,WACR0F,YAAW,WACTL,GAAW,GACXrE,MAAMkE,GACH5D,MAAK,SAACqE,GACL,IAAKA,EAAIC,GACP,MAAMC,MAAM,8CAEd,OAAOF,EAAIG,UAEZxE,MAAK,SAACgE,GACLC,EAAQD,GACRD,GAAW,GACXI,EAAS,SAEVM,OAAM,SAACC,GACNX,GAAW,GACXI,EAASO,EAAIC,cAEhB,MACF,CAACf,EAAKC,IAEF,CAAEC,UAASE,OAAME,UCGXU,EAzBF,WACX,MAAsCrG,oBAAS,GAA/C,mBAAOsF,EAAP,KAAoBgB,EAApB,KACA,EAIIlB,EACF,sEACAE,GALAC,EADF,EACEA,QACMzB,EAFR,EAEE2B,KACAE,EAHF,EAGEA,MAMI/E,EAAc,kBAAM0F,GAAgBhB,IAC1C,OACE,sBAAK7E,UAAU,wDAAf,UACE,cAAC,EAAD,IACA,0BAASA,UAAU,gFAAnB,UACE,cAAC,EAAD,CAAWG,YAAaA,IACvB+E,GAAS,sBAAKlF,UAAU,kBAAf,cAAmCkF,EAAMS,WAClDb,GAAW,6CACXzB,GAAS,cAAC,EAAD,CAAWA,MAAOA,EAAOlD,YAAaA,WChBzC2F,MARf,WACE,OACE,qBAAK9F,UAAU,MAAf,SACE,cAAC,EAAD,O,MCCN+F,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrG,SAASsG,eAAe,W","file":"static/js/main.4ff66956.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","import { useState, useEffect } from \"react\";\r\n\r\nimport bkLight from \"../images/bg-desktop-light.jpg\";\r\n\r\nconst Header = () => {\r\n  const [lightMode, setLightMode] = useState(false);\r\n  useEffect(() => {\r\n    let r = document.querySelector(\":root\");\r\n    if (lightMode) {\r\n      r.style = `--main-color: white ; \r\n               --bk-color: hsl(0, 0%, 98%) ;\r\n               --bk-image: url(${bkLight});\r\n               --main-Fcolor: hsl(235, 19%, 35%);\r\n               --seconadry-Fcolor: hsl(236, 9%, 61%);\r\n               --border-color: hsl(233, 11%, 84%) ;\r\n               --hover-color: black ;\r\n               --selection-color: blue ;\r\n               `;\r\n    } else {\r\n      r.style = \"\";\r\n    }\r\n  }, [lightMode]);\r\n\r\n  return (\r\n    <header className=\"mb-2 py-3 custom-container col-md-6 col-sm-8 col-11 d-flex justify-content-between\">\r\n      <h2 className=\" text-white fw-bold col-xl-10 col-11 px-3 \">TODO</h2>\r\n      <div className=\"theme-icon col ms-xl-3 \">\r\n        {lightMode && (\r\n          <i\r\n            className=\"bi bi-moon-fill btn fs-5\"\r\n            onClick={() => {\r\n              setLightMode(false);\r\n            }}\r\n          ></i>\r\n        )}\r\n        {!lightMode && (\r\n          <i\r\n            className=\"bi bi-brightness-high-fill btn fs-5\"\r\n            onClick={() => {\r\n              setLightMode(true);\r\n            }}\r\n          ></i>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\n\r\nconst TaskInput = ({ RefreshList }) => {\r\n  const [content, setContent] = useState(\"\");\r\n  const handleSumbit = (e) => {\r\n    e.preventDefault();\r\n    const task = { content };\r\n\r\n    fetch(\r\n      \"https://my-json-server.typicode.com/hatem0656/Todo-App-Server/tasks\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(task),\r\n      }\r\n    ).then(() => {\r\n      RefreshList();\r\n      setContent(\"\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-container col-md-6 col-sm-8 col-11 \">\r\n      <div className=\"check-box text-center\"></div>\r\n      <form onSubmit={handleSumbit}>\r\n        <input\r\n          className=\"form-control task ms-2\"\r\n          type=\"text\"\r\n          placeholder=\"Create a new todo..\"\r\n          value={content}\r\n          aria-label=\"new todo field\"\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskInput;\r\n","import { useState, useRef, useEffect } from \"react\";\r\n\r\nconst Task = ({ content, id, RefreshList, handleChecked }) => {\r\n  const [checked, toggleChecked] = useState(false);\r\n  const firstRender = useRef(true),\r\n    checkboxRef = useRef(),\r\n    taskRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n    } else {\r\n      checkboxRef.current.classList.toggle(\"checked\");\r\n      taskRef.current.classList.toggle(\"checked\");\r\n      handleChecked();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [checked]);\r\n  return (\r\n    <div\r\n      draggable=\"true\"\r\n      ref={taskRef}\r\n      className=\"list task w-100 ms-sm-3 ms-2\"\r\n      id={id}\r\n      key={id}\r\n    >\r\n      <div\r\n        ref={checkboxRef}\r\n        className=\"check-box text-center \"\r\n        onClick={() => toggleChecked(!checked)}\r\n      >\r\n        {checked && <i className=\"bi bi-check text-white \"></i>}\r\n      </div>\r\n      <span>{content}</span>\r\n      <i\r\n        className=\"bi bi-x-lg delete\"\r\n        onClick={() => {\r\n          fetch(\"http://localhost:8000/tasks/\" + id, { method: \"DELETE\" }).then(\r\n            () => RefreshList()\r\n          );\r\n        }}\r\n      ></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nconst TaskFilter = ({ RefreshList, taskNo }) => {\r\n  const completedTasks = useRef({});\r\n  const activeTasks = useRef({});\r\n\r\n  const updateList = () => {\r\n    completedTasks.current = document.querySelectorAll(\".list.checked\");\r\n    activeTasks.current = document.querySelectorAll(\".list:not(.checked)\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateList();\r\n  });\r\n\r\n  const handleSelection = (e) => {\r\n    let selectedButton = document.querySelector(\".selected\");\r\n    selectedButton.classList.remove(\"selected\");\r\n    e.target.classList.add(\"selected\");\r\n  };\r\n\r\n  const showAll = () => {\r\n    updateList();\r\n    let allTasks = document.querySelectorAll(\".list\");\r\n    allTasks.forEach((task) => (task.style.display = \"block\"));\r\n  };\r\n\r\n  const showActive = () => {\r\n    updateList();\r\n    completedTasks.current.forEach((task) => (task.style.display = \"none\"));\r\n    activeTasks.current.forEach((task) => (task.style.display = \"block\"));\r\n  };\r\n\r\n  const showCompleted = () => {\r\n    updateList();\r\n    activeTasks.current.forEach((task) => (task.style.display = \"none\"));\r\n    completedTasks.current.forEach((task) => (task.style.display = \"block\"));\r\n  };\r\n\r\n  const handleClear = async () => {\r\n    updateList();\r\n\r\n    for (let i = 0; i < completedTasks.current.length; i++) {\r\n      // Must wait the returned promise of the fetch function to continue the loop to avoid requests colliosion\r\n      await fetch(\r\n        \"https://my-json-server.typicode.com/hatem0656/Todo-App-Server/tasks/\" +\r\n          completedTasks.current[i].id,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n    }\r\n    RefreshList();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      nodrag=\"true\"\r\n      className=\"filters d-flex align-items-center text-center pt-1 px-4 w-100 ms-sm-3 ms-2\"\r\n    >\r\n      <span>{taskNo} items left</span>\r\n      <button\r\n        nodrag=\"true\"\r\n        className=\"all ms-auto btn selected\"\r\n        onClick={(e) => {\r\n          handleSelection(e);\r\n          showAll();\r\n        }}\r\n      >\r\n        All\r\n      </button>\r\n      <button\r\n        nodrag=\"true\"\r\n        className=\"active btn \"\r\n        onClick={(e) => {\r\n          handleSelection(e);\r\n          showActive();\r\n        }}\r\n      >\r\n        Active\r\n      </button>\r\n      <button\r\n        nodrag=\"true\"\r\n        className=\"completed me-auto btn\"\r\n        onClick={(e) => {\r\n          handleSelection(e);\r\n          showCompleted();\r\n        }}\r\n      >\r\n        Completed\r\n      </button>\r\n      <button nodrag=\"true\" className=\"clear px-0 btn\" onClick={handleClear}>\r\n        Clear Completed\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskFilter;\r\n","import Task from \"./Task\";\r\nimport TaskFilter from \"./TaskFilter\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\n\r\nconst TasksList = ({ tasks, RefreshList }) => {\r\n  const [taskNo, setTaskNo] = useState(\r\n    document.querySelectorAll(\".list:not(.checked)\").length\r\n  );\r\n  const handleUpdateTasks = () => {\r\n    setTaskNo(document.querySelectorAll(\".list:not(.checked)\").length);\r\n  };\r\n  useEffect(handleUpdateTasks, [RefreshList]);\r\n\r\n  /*\r\n                                =============================\r\n                                       Dragging Tasks\r\n                                ============================== \r\n*/\r\n  const dragged = useRef();\r\n  const Drag = (event) => {\r\n    dragged.current = event.target;\r\n    event.target.style.opacity = \"0.5\";\r\n  };\r\n  const DragEnd = (event) => {\r\n    event.target.style.opacity = \"\";\r\n  };\r\n  const DragOver = (event) => {\r\n    event.preventDefault();\r\n    if (!(event.target === dragged.current)) {\r\n      event.target.style.borderTop = \"1px solid darkturquoise\";\r\n    }\r\n  };\r\n  const DragLeave = (event) => {\r\n    event.target.style.border = \"\";\r\n  };\r\n  const Drop = (event) => {\r\n    event.preventDefault();\r\n    event.target.style.border = \"\";\r\n    let replaced = event.target;\r\n    let draggedPos = dragged.current.getBoundingClientRect(),\r\n      replacedPos = replaced.getBoundingClientRect();\r\n\r\n    if (draggedPos.y < replacedPos.y) {\r\n      replaced.insertAdjacentElement(\"afterend\", dragged.current);\r\n    } else {\r\n      replaced.insertAdjacentElement(\"beforebegin\", dragged.current);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className=\"custom-container my-4 col-md-6 col-sm-8 col-11 d-flex flex-column justify-content-sm-center align-items-sm-center\"\r\n      onDragStart={(e) => Drag(e)}\r\n      onDragEnd={(e) => DragEnd(e)}\r\n      onDragOver={(e) => {\r\n        if (!e.target.hasAttribute(\"nodrag\")) DragOver(e);\r\n      }}\r\n      onDragLeave={(e) => DragLeave(e)}\r\n      onDrop={(e) => {\r\n        if (!e.target.hasAttribute(\"nodrag\")) Drop(e);\r\n      }}\r\n    >\r\n      {tasks.map((task) => {\r\n        return (\r\n          <Task\r\n            content={task.content}\r\n            key={task.id}\r\n            id={task.id}\r\n            RefreshList={RefreshList}\r\n            handleChecked={handleUpdateTasks}\r\n          />\r\n        );\r\n      })}\r\n      <TaskFilter RefreshList={RefreshList} taskNo={taskNo} />\r\n      <h3 className=\"hint text-center my-5\">Drag and drop to re-order list</h3>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url, listRefresh) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(true);\r\n      fetch(url)\r\n        .then((res) => {\r\n          if (!res.ok) {\r\n            throw Error(\"could not fetch the data from the resource\");\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setData(data);\r\n          setLoading(false);\r\n          setError(null);\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          setError(err.message);\r\n        });\r\n    }, 10);\r\n  }, [url, listRefresh]);\r\n\r\n  return { loading, data, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport TaskInput from \"./TaskInput\";\r\nimport TasksList from \"./TasksList\";\r\n\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n  const [listRefresh, setListRefresh] = useState(false);\r\n  const {\r\n    loading,\r\n    data: tasks,\r\n    error,\r\n  } = useFetch(\r\n    \"https://my-json-server.typicode.com/hatem0656/Todo-App-Server/tasks\",\r\n    listRefresh\r\n  );\r\n\r\n  const RefreshList = () => setListRefresh(!listRefresh);\r\n  return (\r\n    <div className=\"container-lg d-flex flex-column align-items-sm-center\">\r\n      <Header />\r\n      <section className=\"home d-flex flex-column justify-content-sm-center align-items-sm-center w-100\">\r\n        <TaskInput RefreshList={RefreshList} />\r\n        {error && <div className=\"text-white mt-5\"> {error.message}</div>}\r\n        {loading && <div> Loading..</div>}\r\n        {tasks && <TasksList tasks={tasks} RefreshList={RefreshList} />}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}